# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wi25_QvcUWmVr2klPDrRFegCySAwOhje

# Proyek Analisis Data: E-Commerce Public
- **Nama:** Dio Irsaputra Siregar
- **Email:** dio.siregar03@gmail.com
- **ID Dicoding:** diosiregar03

## Menentukan Pertanyaan Bisnis

- Berapa Persen Kategori Product yang memiliki review dibawah 3?
- Apa Kategori Produk yang memiliki review dibawah 3 paling banyak dan Paling sedikit?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

link drive: https://drive.google.com/drive/folders/1UzM0k3Lk1Er2C6cx3PhnmxXnYcVcSg3M?usp=sharing

### Gathering Data
"""

# Data Product
product_df = pd.read_csv(
    "https://drive.google.com/uc?export=download&id=1cTXgDwn_v0blae8croPgKyaIPA2caRbK")
product_df.head()

# Data Order Items
orderItems_df = pd.read_csv(
    "https://drive.google.com/uc?export=download&id=1g23VYdO7KUAD8KVfH5wrv4eBsWKu-fiV")
orderItems_df.head()

# Data Order
orders_df = pd.read_csv(
    "https://drive.google.com/uc?export=download&id=1OcqLHPojDb0FwjPGC4Dz9IvH0vFFTOWD")
orders_df.head()

# Data Order Review
reviews_df = pd.read_csv(
    "https://drive.google.com/uc?export=download&id=15l4uI0-UsUSh2d5D0vTk5CO237rQ0Sgh")
reviews_df.head()

# Data Order Review
catName_df = pd.read_csv(
    "https://drive.google.com/uc?export=download&id=1Zd1OKFP4UCT9NAwdSfV02LVNmwEKNKr5")
catName_df.head()

"""### Assessing Data

#### Data Product
"""

# Data Product
product_df.info()

product_df.isna().sum()

print("Jumlah duplikasi: ", product_df.duplicated().sum())

product_df.describe()

"""#### Data Order Items"""

orderItems_df.info()

orderItems_df.isna().sum()

print("Jumlah duplikasi: ", orderItems_df.duplicated().sum())

orderItems_df.describe()

"""#### Data Order"""

orders_df.info()

orders_df.isna().sum()

print("Jumlah duplikasi: ", orders_df.duplicated().sum())

orders_df.describe()

"""#### Data Review"""

reviews_df.info()

reviews_df.isna().sum()

print("Jumlah Duplikasi: ", reviews_df.duplicated().sum())

reviews_df.describe()

"""### Cleaning Data

#### Cleaning Data Product
"""

product_df[product_df.product_category_name.isna()]
# Mengganti nilai NaN di kolom 'product_category_name' dengan '-'
product_df['product_category_name'] = product_df['product_category_name'].fillna(
    '-')
# Mengganti nilai NaN dengan rata-rata dari kolom tersebut
product_df['product_name_lenght'] = product_df['product_name_lenght'].fillna(
    product_df['product_name_lenght'].mean())
product_df['product_description_lenght'] = product_df['product_description_lenght'].fillna(
    product_df['product_description_lenght'].mean())
product_df['product_photos_qty'] = product_df['product_photos_qty'].fillna(
    product_df['product_photos_qty'].mean())
product_df['product_weight_g'] = product_df['product_weight_g'].fillna(
    product_df['product_weight_g'].mean())
product_df['product_length_cm'] = product_df['product_length_cm'].fillna(
    product_df['product_length_cm'].mean())
product_df['product_height_cm'] = product_df['product_height_cm'].fillna(
    product_df['product_height_cm'].mean())
product_df['product_width_cm'] = product_df['product_width_cm'].fillna(
    product_df['product_width_cm'].mean())
product_df.info()

"""#### Cleaning Data Order

"""

# datetime_columns = ["order_date", "delivery_date"]

# for column in datetime_columns:
#   orders_df[column] = pd.to_datetime(orders_df[column])
# Menghapus  Data yang memiliki status cancel
orders_df = orders_df[orders_df['order_status'] == 'delivered']
orders_df[orders_df.order_delivered_carrier_date.isna()]
# orders_df.isna().sum()

"""#### Cleaning Data Review"""

reviews_df['review_comment_title'] = reviews_df['review_comment_title'].fillna(
    '-')
reviews_df['review_comment_message'] = reviews_df['review_comment_message'].fillna(
    '-')
reviews_df.isna().sum()

"""## Exploratory Data Analysis (EDA)

### Explore ...
"""

orders_orderItems_df = pd.merge(
    left=orderItems_df,
    right=product_df,
    how="left",
    left_on="product_id",
    right_on="product_id"
)
orders_orderItems_df.isna().sum()

orders_orderItems_review_df = pd.merge(
    left=orders_orderItems_df,
    right=reviews_df,
    how="inner",
    left_on="order_id",
    right_on="order_id"
)
orders_orderItems_review_df


orders_orderItems_review_df_under3 = orders_orderItems_review_df[
    orders_orderItems_review_df['review_score'] < 3]
orders_orderItems_review_df_up3 = orders_orderItems_review_df[
    orders_orderItems_review_df['review_score'] >= 3]

# orders_orderItems_review_df_under3.count()
# orders_orderItems_review_df_up3.count()
orders_orderItems_review_df_under3.count()

percentage_under3 = orders_orderItems_review_df_under3['review_id'].count(
) / orders_orderItems_review_df['review_id'].count() * 100
percentage_up3 = orders_orderItems_review_df_up3['review_id'].count(
) / orders_orderItems_review_df['review_id'].count() * 100
percentage_under3
percentage_up3

orders_orderItems_review_product_df = pd.merge(
    left=orders_orderItems_review_df_under3,
    right=product_df,
    how="inner",
    left_on="product_id",
    right_on="product_id"
)
orders_orderItems_review_product_df = pd.merge(
    left=orders_orderItems_review_product_df,
    right=catName_df,
    how="left",
    left_on="product_category_name_x",
    right_on="product_category_name"
)
orders_orderItems_review_product_df

"""## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

data = {
    'category': ['Rating Diatas 3', 'Rating Dibawah 3'],
    'count': [orders_orderItems_review_df_up3['review_id'].count(), orders_orderItems_review_df_under3['review_id'].count()]
}

rating_df = pd.DataFrame(data)
total_count = rating_df['count'].sum()
rating_df['percentage'] = (rating_df['count'] / total_count) * 100

# Plot pie chart
plt.figure(figsize=(8, 8))
plt.pie(
    rating_df['percentage'],
    labels=rating_df['category'],
    autopct='%1.1f%%',  # Menampilkan persentase dengan satu desimal
    startangle=140
)
plt.title('Distribusi Rating Kategori ')
plt.show()

"""### Pertanyaan 2:"""


# Membuat DataFrame dari data
orders_orderItems_review_product_df = pd.DataFrame(
    orders_orderItems_review_product_df)

# Menghitung jumlah per item
item_counts = orders_orderItems_review_product_df['product_category_name_english'].value_counts(
)

# Menampilkan hasil hitung
print(item_counts)

# Membuat diagram batang
fig, ax = plt.subplots(figsize=(20, 10))

# Mendapatkan posisi batang dengan jarak tambahan
# Ubah faktor untuk mengatur lebar gap
positions = np.arange(len(item_counts)) * 1.5

# Membuat diagram batang dengan posisi yang telah disesuaikan
bars = ax.bar(positions, item_counts, align='center', color='red')

# Mengatur label sumbu x dengan posisi yang telah disesuaikan
ax.set_xticks(positions)
ax.set_xticklabels(item_counts.index, rotation=90, ha='right')

# Menambahkan label dan judul
ax.set_xlabel('Item', fontsize=14)
ax.set_ylabel('Jumlah', fontsize=14)
ax.set_title('Diagram Batang Jumlah Per Item', fontsize=16)

# Menambahkan grid untuk sumbu y
ax.grid(axis='y', linestyle='--', alpha=0.7)

# Menambahkan jumlah item di atas setiap batang
for bar in bars:
    ax.annotate(str(bar.get_height()),
                (bar.get_x() + bar.get_width() / 2., bar.get_height()),
                ha='center', va='center', xytext=(0, 10),
                textcoords='offset points', fontsize=8)

# Mengatur layout agar lebih rapi
plt.tight_layout()

# Menampilkan grafik
plt.show()

"""## Conclusion

- 16.1% Kategori Product yang memiliki review dibawah 3 dengan total 18109 item
- Kategori Produk yang memiliki review dibawah 3 paling banyak adalah bed_bath_table yang jumlah sebanyak 2112 item dan Kategori produk yang memiliki review dibawah 3 paling sedikit adalah fashion_childrens_clothes dan security_and_services denga jumlah 1 item
"""
